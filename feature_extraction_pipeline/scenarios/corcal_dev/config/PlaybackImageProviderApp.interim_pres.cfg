# ==================================================================
# PlaybackImageProviderApp properties
# ==================================================================

# ArmarX.AdditionalPackages:  List of additional ArmarX packages which should be in the list of default packages. If you have custom packages, which should be found by the gui or other apps, specify them here. Comma separated List.
#  Attributes:
#  - Default:            Default value not mapped.
#  - Case sensitivity:   no
#  - Required:           no
# ArmarX.AdditionalPackages = Default value not mapped.


# ArmarX.ApplicationName:  Application name
#  Attributes:
#  - Default:            ""
#  - Case sensitivity:   no
#  - Required:           no
# ArmarX.ApplicationName = ""


# ArmarX.CachePath:  Path for cache files. If relative path AND env. variable ARMARX_USER_CONFIG_DIR is set, the cache path will be made relative to ARMARX_USER_CONFIG_DIR. Otherwise if relative it will be relative to the default ArmarX config dir (${HOME}/.armarx)
#  Attributes:
#  - Default:            mongo/.cache
#  - Case sensitivity:   no
#  - Required:           no
# ArmarX.CachePath = mongo/.cache


# ArmarX.Config:  Comma-separated list of configuration files 
#  Attributes:
#  - Default:            ""
#  - Case sensitivity:   no
#  - Required:           no
# ArmarX.Config = ""


# ArmarX.DataPath:  Semicolon-separated search list for data files
#  Attributes:
#  - Default:            ""
#  - Case sensitivity:   no
#  - Required:           no
# ArmarX.DataPath = ""


# ArmarX.DefaultPackages:  List of ArmarX packages which are accessible by default. Comma separated List. If you want to add your own packages and use all default ArmarX packages, use the property 'AdditionalPackages'.
#  Attributes:
#  - Default:            Default value not mapped.
#  - Case sensitivity:   no
#  - Required:           no
# ArmarX.DefaultPackages = Default value not mapped.


# ArmarX.DependenciesConfig:  Path to the (usually generated) config file containing all data paths of all dependent projects. This property usually does not need to be edited.
#  Attributes:
#  - Default:            ./config/dependencies.cfg
#  - Case sensitivity:   no
#  - Required:           no
# ArmarX.DependenciesConfig = ./config/dependencies.cfg


# ArmarX.DisableLogging:  Turn logging off in whole application
#  Attributes:
#  - Default:            false
#  - Case sensitivity:   no
#  - Required:           no
# ArmarX.DisableLogging = false


# ArmarX.EnableProfiling:  Enable profiling of CPU load produced by this application
#  Attributes:
#  - Default:            false
#  - Case sensitivity:   no
#  - Required:           no
# ArmarX.EnableProfiling = false


# ArmarX.LoadLibraries:  Libraries to load at start up of the application. Must be enabled by the Application with enableLibLoading(). Format: PackageName:LibraryName;... or /absolute/path/to/library;...
#  Attributes:
#  - Default:            ""
#  - Case sensitivity:   no
#  - Required:           no
# ArmarX.LoadLibraries = ""


# ArmarX.PlaybackImageProvider.EnableProfiling:  enable profiler which is used for logging performance events
#  Attributes:
#  - Default:            false
#  - Case sensitivity:   no
#  - Required:           no
# ArmarX.PlaybackImageProvider.EnableProfiling = false


# ArmarX.PlaybackImageProvider.MinimumLoggingLevel:  Local logging level only for this component
#  Attributes:
#  - Default:            Undefined
#  - Case sensitivity:   no
#  - Required:           no
# ArmarX.PlaybackImageProvider.MinimumLoggingLevel = Undefined


# ArmarX.PlaybackImageProvider.ObjectName:  Name of IceGrid well-known object
#  Attributes:
#  - Default:            ""
#  - Case sensitivity:   no
#  - Required:           no
ArmarX.PlaybackImageProvider.ObjectName = "corcal_image_provider"


# ArmarX.PlaybackImageProvider.base_path:  Common base path of recording_files (will be prepened if set). To unset, use ""
#  Attributes:
#  - Default:            ""
#  - Case sensitivity:   no
#  - Required:           no
ArmarX.PlaybackImageProvider.base_path = /common/homes/students/dreher1/tmp/interim_rec


# ArmarX.PlaybackImageProvider.fps:  Lock the FPS to an absolute value, or a value relative to source FPS. Valid inputs:
#   1) `source` => Derive FPS from source
#   2) `source*<X>`, with <X> being a positive decimal or integer => Playback with FPS = source FPS multiplied by <X>
#   3) `source/<X>`, with <X> being a positive decimal or integer => Playback with FPS = source FPS devided by <X>
#   4) `<X>`, with <X> being a positive decimal or integer => Playback with FPS at <X>
#   5) `source=<X>`, with <X> being a positive decimal or integer => Playback with FPS at <X>, ignoring source FPS completely (Assume that <X> is source FPS)
# With the exception of 5), all settings only have direct effect of the FPS the image provider delivers the frames, but not on the playback speed. Use `playback_speed_multiplier` to adjust that.
# 5) is only useful if the metadata of the recording is incomplete or incorrect (for example when replaying generic image sequences where the FPS cannot be derived)
#  Attributes:
#  - Default:            source
#  - Case sensitivity:   no
#  - Required:           no
# ArmarX.PlaybackImageProvider.fps = source


# ArmarX.PlaybackImageProvider.fps_multiplier:  No Description
#  Attributes:
#  - Default:            1
#  - Case sensitivity:   no
#  - Required:           no
ArmarX.PlaybackImageProvider.fps_multiplier = 1


# ArmarX.PlaybackImageProvider.loop:  Whether the playback should restart after the last frame was provided
#  Attributes:
#  - Default:            true
#  - Case sensitivity:   no
#  - Required:           no
# ArmarX.PlaybackImageProvider.loop = true


# ArmarX.PlaybackImageProvider.playback_speed_multiplier:  Adjust the playback speed with this multiplier, e.g. `2` = double playback speed, `0.5` = half playback speed
#  Attributes:
#  - Default:            1
#  - Case sensitivity:   no
#  - Required:           no
# ArmarX.PlaybackImageProvider.playback_speed_multiplier = 1


# ArmarX.PlaybackImageProvider.recording_files:  List of recording files, separated by semicolons `;` for each channel. For video files, use the filename, for image sequences, use the folder name where the image sequence is located or any frame as pattern.
# Wildcards (e.g. `frame_left_*.jpg;frame_right_*.jpg`) are supported as well.
# Files will be interpreted as absolute paths, or relative paths to the current working directory if base_path is not set. If base_path is set, all paths in recording_files are interpreted relative to base_path
#  Attributes:
#  - Case sensitivity:   no
#  - Required:           yes
ArmarX.PlaybackImageProvider.recording_files = rec_rgb;rec_depth


# ArmarX.RedirectStdout:  Redirect std::cout and std::cerr to ArmarXLog
#  Attributes:
#  - Default:            true
#  - Case sensitivity:   no
#  - Required:           no
# ArmarX.RedirectStdout = true


# ArmarX.RemoteHandlesDeletionTimeout:  The timeout (in ms) before a remote handle deletes the managed object after the use count reached 0. This time can be used by a client to increment the count again (may be required when transmitting remote handles)
#  Attributes:
#  - Default:            3000
#  - Case sensitivity:   no
#  - Required:           no
# ArmarX.RemoteHandlesDeletionTimeout = 3000


# ArmarX.SecondsStartupDelay:  The startup will be delayed by this number of seconds (useful for debugging)
#  Attributes:
#  - Default:            0
#  - Case sensitivity:   no
#  - Required:           no
# ArmarX.SecondsStartupDelay = 0


# ArmarX.StartDebuggerOnCrash:  If this application crashes (segmentation fault) qtcreator will attach to this process and start the debugger.
#  Attributes:
#  - Default:            false
#  - Case sensitivity:   no
#  - Required:           no
# ArmarX.StartDebuggerOnCrash = false


# ArmarX.ThreadPoolSize:  Size of the ArmarX ThreadPool that is always running.
#  Attributes:
#  - Default:            1
#  - Case sensitivity:   no
#  - Required:           no
# ArmarX.ThreadPoolSize = 1


# ArmarX.TopicSuffix:  Suffix appended to all topic names for outgoing topics. This is mainly used to direct all topics to another name for TopicReplaying purposes.
#  Attributes:
#  - Default:            ""
#  - Case sensitivity:   no
#  - Required:           no
# ArmarX.TopicSuffix = ""


# ArmarX.UseTimeServer:  Enable using a global Timeserver (e.g. from ArmarXSimulator)
#  Attributes:
#  - Default:            false
#  - Case sensitivity:   no
#  - Required:           no
# ArmarX.UseTimeServer = false


# ArmarX.Verbosity:  Global logging level for whole application
#  Attributes:
#  - Default:            Info
#  - Case sensitivity:   no
#  - Required:           no
# ArmarX.Verbosity = Info


